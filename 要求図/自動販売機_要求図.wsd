@startuml 自動販売機_要求図
left to right direction

' アクター定義
class 利用者 <<actor>> {}
class 管理者 <<actor>> {}
class メンテナンス担当 <<actor>> {}

' 上位要求
class SR1 <<requirement>> {
  id = SR1
  text = 利用者が簡単かつ確実に商品を購入できること
}
class SR2 <<requirement>> {
  id = SR2
  text = 管理者が安全かつ効率的に運用管理できること
}
class SR3 <<requirement>> {
  id = SR3
  text = 故障が発生しても迅速に対応できること
}

' 子要求（詳細要求）
class R1 <<requirement>> {
  id = R1
  text = 現金またはキャッシュレスで支払いたい
}
class R2 <<requirement>> {
  id = R2
  text = 商品を選んで購入したい
}
class R3 <<requirement>> {
  id = R3
  text = 購入可能な商品を視認したい
}
class R4 <<requirement>> {
  id = R4
  text = 釣銭・返金を正しく受け取りたい
}
class R5 <<requirement>> {
  id = R5
  text = 売上金を安全に回収したい
}
class R6 <<requirement>> {
  id = R6
  text = 商品を補充したい
}
class R7 <<requirement>> {
  id = R7
  text = 釣銭を補充したい
}
class R8 <<requirement>> {
  id = R8
  text = 販売商品を変更したい
}
class R9 <<requirement>> {
  id = R9
  text = 機械の状態を確認したい
}
class R10 <<requirement>> {
  id = R10
  text = 故障時に対応・復旧したい
}

' 要求階層（deriveReqt）
SR1 --> R1 : <<deriveReqt>>
SR1 --> R2 : <<deriveReqt>>
SR1 --> R3 : <<deriveReqt>>
SR1 --> R4 : <<deriveReqt>>

SR2 --> R5 : <<deriveReqt>>
SR2 --> R6 : <<deriveReqt>>
SR2 --> R7 : <<deriveReqt>>
SR2 --> R8 : <<deriveReqt>>
SR2 --> R9 : <<deriveReqt>>

SR3 --> R10 : <<deriveReqt>>

' アクターと上位要求の関係
利用者 *-- SR1
管理者 *-- SR2
メンテナンス担当 *-- SR3

' ユースケース定義
class UC1 <<usecase>> {
   商品一覧を表示する
}
class UC2 <<usecase>> {
   商品を選択し購入する 
}
class UC3 <<usecase>> {
   お金を投入する 
}
class UC4 <<usecase>> {
   釣銭_返金を受け取る 
}
class UC5 <<usecase>> {
   売上金を回収する 
}
class UC6 <<usecase>> {
   商品を補充する 
}
class UC7 <<usecase>> {
   釣銭を補充する 
}
class UC8 <<usecase>> {
   販売商品を変更する 
}
class UC9 <<usecase>> {
   故障対応を行う 
}
class UC10 <<usecase>> {
   機械の状態を確認する 
}

' 要求とユースケースのトレーサビリティ
R1 <.. UC3 : <<refine>>
R2 <.. UC2 : <<refine>>
R3 <.. UC1 : <<refine>>
R4 <.. UC4 : <<refine>>
R5 <.. UC5 : <<refine>>
R6 <.. UC6 : <<refine>>
R7 <.. UC7 : <<refine>>
R8 <.. UC8 : <<refine>>
R9 <.. UC10 : <<refine>>
R10 <.. UC9 : <<refine>>

@enduml
